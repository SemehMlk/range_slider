import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.validation.beanvalidation.LocalValidatorFactoryBean;
import jakarta.validation.ConstraintViolation;
import jakarta.validation.ConstraintViolationException;
import jakarta.validation.Validator;
import jakarta.validation.executable.ExecutableValidator;
import java.lang.reflect.Method;
import java.util.Set;
import static org.junit.jupiter.api.Assertions.*;

public class MessagesServiceTest {

    private MessagesService messagesService;
    private ExecutableValidator executableValidator;

    @BeforeEach
    public void setUp() {
        messagesService = new MessagesService();
        LocalValidatorFactoryBean factoryBean = new LocalValidatorFactoryBean();
        factoryBean.afterPropertiesSet();
        Validator validator = factoryBean.getValidator();
        executableValidator = validator.forExecutables();
    }

    @Test
    public void testGetAllMessagesInvalidPageNumber() throws Exception {
        Method method = MessagesService.class.getMethod("getAllMessages", Integer.class, Integer.class, String.class, String.class, ApiSearchRequestDto.class);
        Object[] parameterValues = {-1, 10, "sortBy", "order", new ApiSearchRequestDto()}; // Invalid page number

        Set<ConstraintViolation<MessagesService>> violations = executableValidator.validateParameters(
                messagesService, method, parameterValues);

        assertFalse(violations.isEmpty());
        ConstraintViolation<MessagesService> violation = violations.iterator().next();
        assertEquals("Page number should not be less than 0", violation.getMessage());
    }

    @Test
    public void testGetAllMessagesInvalidPageSize() throws Exception {
        Method method = MessagesService.class.getMethod("getAllMessages", Integer.class, Integer.class, String.class, String.class, ApiSearchRequestDto.class);
        Object[] parameterValues = {0, 0, "sortBy", "order", new ApiSearchRequestDto()}; // Invalid page size

        Set<ConstraintViolation<MessagesService>> violations = executableValidator.validateParameters(
                messagesService, method, parameterValues);

        assertFalse(violations.isEmpty());
        ConstraintViolation<MessagesService> violation = violations.iterator().next();
        assertEquals("Page size should not be less than 1", violation.getMessage());
    }
}
