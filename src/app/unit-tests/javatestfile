 subscribedApplication: this.fb.group({
      gpp: [this.data?.subscribedApplication?.includes('GPP') || false],
      corona: [this.data?.subscribedApplication?.includes('CORONA') || false],
      intellimatch: [
        this.data?.subscribedApplication?.includes('INTELLIMATCH') || false,
      ],
    })

initializeSubscribedApplications(apps: string[]) {
  return {
    gpp: apps.includes('GPP'),
    corona: apps.includes('CORONA'),
    intellimatch: apps.includes('INTELLIMATCH'),
  };
}

subscribedApplication: this.fb.group(
  this.initializeSubscribedApplications(this.data?.subscribedApplication || [])
)

getFormValues() {
  const formValue = this.formGroup.value;

  // Convert 'subscribedApplication' group into an array of strings
  const subscribedApplications = Object.entries(
    formValue.subscribedApplication
  )
    .filter(([key, value]) => value === true) // Filtrer les valeurs true
    .map(([key]) => key.toUpperCase()); // Transformer les clés en chaîne

  return {
    ...formValue,
    subscribedApplication: subscribedApplications,
  };
}
