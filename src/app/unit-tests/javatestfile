import org.mapstruct.*;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.example.model.UserPreferenceDto;
import com.example.entity.UserPreferenceEntity;

@Mapper(componentModel = "spring", uses = {JsonObjectMapper.class})
public interface UserPreferenceMapper {

    @Mapping(target = "configs", source = "configs", qualifiedByName = "objectToJson")
    UserPreferenceEntity toEntity(UserPreferenceDto dto);

    @Mapping(target = "configs", source = "configs", qualifiedByName = "jsonToObject")
    UserPreferenceDto toDto(UserPreferenceEntity entity);
}

import org.mapstruct.Named;
import org.springframework.stereotype.Component;
import com.fasterxml.jackson.databind.ObjectMapper;

@Component
public class JsonObjectMapper {

    private final ObjectMapper objectMapper;

    public JsonObjectMapper(ObjectMapper objectMapper) {
        this.objectMapper = objectMapper;
    }

    @Named("objectToJson")
    public String objectToJson(Object object) {
        try {
            return object != null ? objectMapper.writeValueAsString(object) : null;
        } catch (Exception e) {
            throw new RuntimeException("Error converting object to JSON", e);
        }
    }

    @Named("jsonToObject")
    public Object jsonToObject(String json) {
        try {
            return json != null ? objectMapper.readValue(json, Object.class) : null;
        } catch (Exception e) {
            throw new RuntimeException("Error converting JSON to object", e);
        }
    }
}
