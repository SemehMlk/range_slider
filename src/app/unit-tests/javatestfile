import jakarta.persistence.*;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.hibernate.annotations.JdbcTypeCode;
import org.hibernate.type.SqlTypes;

@Entity
@Table(name = "inbound_message",
        indexes = {
                @Index(name = "inbound_message_index_status", columnList = "status"),
                @Index(name = "inbound_message_index_sha3_checksum", columnList = "sha3_checksum")
        })
@NoArgsConstructor
@Getter
@Setter
public class InboundMessage {

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "inbound_message_sequence_generator")
    @SequenceGenerator(name = "inbound_message_sequence_generator", sequenceName = "inbound_message_sequence", allocationSize = 1)
    private Long id;

    @Lob
    @JdbcTypeCode(SqlTypes.LONGVARCHAR)
    private String content;

    @OneToOne(mappedBy = "inboundMessage", cascade = CascadeType.ALL, orphanRemoval = true)
    private CanonicalMessage canonicalMessage;

    public void setCanonicalMessage(CanonicalMessage canonicalMessage) {
        this.canonicalMessage = canonicalMessage;
        canonicalMessage.setInboundMessage(this); // Assurer la relation bidirectionnelle
    }

    @PrePersist
    private void assignCanonicalMessageId() {
        if (canonicalMessage != null) {
            canonicalMessage.setId(this.id); // Assigner l'ID avant l'insertion
        }
    }
}
