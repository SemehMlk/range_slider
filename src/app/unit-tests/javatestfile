import { Component, forwardRef } from '@angular/core';
import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';

@Component({
  selector: 'app-multi-select-dropdown',
  templateUrl: './multi-select-dropdown.component.html',
  styleUrls: ['./multi-select-dropdown.component.css'],
  providers: [
    {
      provide: NG_VALUE_ACCESSOR,
      useExisting: forwardRef(() => MultiSelectDropdownComponent),
      multi: true,
    },
  ],
})
export class MultiSelectDropdownComponent implements ControlValueAccessor {
  options = [
    { name: 'Option 1', selected: false },
    { name: 'Option 2', selected: false },
    { name: 'Option 3', selected: false },
    { name: 'Option 4', selected: false }
  ];

  private onChange: (value: any) => void = () => {};
  private onTouched: () => void = () => {};

  writeValue(value: any): void {
    if (value) {
      this.options.forEach(option => {
        option.selected = value.includes(option.name);
      });
    }
  }

  registerOnChange(fn: any): void {
    this.onChange = fn;
  }

  registerOnTouched(fn: any): void {
    this.onTouched = fn;
  }

  setDisabledState?(isDisabled: boolean): void {
    // Implémente si nécessaire
  }

  toggleSelection(option: any) {
    option.selected = !option.selected;
    this.onChange(this.selectedOptions);
  }

  get selectedOptions() {
    return this.options.filter(option => option.selected).map(option => option.name);
  }
}




<button mat-button [matMenuTriggerFor]="menu">Sélectionner</button>
<mat-menu #menu="matMenu">
  <button mat-menu-item *ngFor="let option of options" (click)="toggleSelection(option)">
    <mat-checkbox [checked]="option.selected">{{ option.name }}</mat-checkbox>
  </button>
</mat-menu>

<div>
  <p>Éléments sélectionnés :</p>
  <ul>
    <li *ngFor="let option of selectedOptions">{{ option }}</li>
  </ul>
</div>
