import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.springframework.http.HttpStatus;

import javax.servlet.http.HttpServletResponse;

@Aspect
public class NullResponseAspect {

    private final HttpServletResponse response;

    public NullResponseAspect(HttpServletResponse response) {
        this.response = response;
    }

    @Around("execution(* com.yourpackage..*.*(..))") // Adaptez le chemin selon vos packages
    public Object handleNullResponse(ProceedingJoinPoint joinPoint) throws Throwable {
        Object result = joinPoint.proceed(); // Exécute la méthode générée

        if (result == null) {
            response.setStatus(HttpStatus.NO_CONTENT.value()); // Définit explicitement 204
        }
        return result; // Retourne l'objet tel quel (null ou non)
    }
}



import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class AspectConfig {

    @Bean
    public NullResponseAspect nullResponseAspect(HttpServletResponse response) {
        return new NullResponseAspect(response);
    }
}

