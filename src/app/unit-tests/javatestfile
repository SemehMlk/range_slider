import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.beanvalidation.LocalValidatorFactoryBean;

import jakarta.validation.ConstraintViolation;
import jakarta.validation.ConstraintViolationException;
import jakarta.validation.Validator;
import java.util.Set;

import static org.junit.jupiter.api.Assertions.*;

public class MessageServiceTest {

    private MessageService messageService;
    private Validator validator;

    @BeforeEach
    public void setUp() {
        messageService = new MessageService();
        LocalValidatorFactoryBean factoryBean = new LocalValidatorFactoryBean();
        factoryBean.afterPropertiesSet();
        validator = factoryBean.getValidator();
    }

    @Test
    public void testGetMessagesInvalidPageNumber() {
        Integer invalidPageNumber = -1; // Invalid page number
        Integer validPageSize = 10; // Valid page size

        Set<ConstraintViolation<MessageService>> violations = validator.forExecutables().validateParameters(
                messageService,
                messageService.getClass().getMethod("getMessages", Integer.class, Integer.class),
                new Object[]{invalidPageNumber, validPageSize}
        );

        assertFalse(violations.isEmpty());
        ConstraintViolation<MessageService> violation = violations.iterator().next();
        assertEquals("Page number should not be less than 0", violation.getMessage());
    }

    @Test
    public void testGetMessagesInvalidPageSize() {
        Integer validPageNumber = 0; // Valid page number
        Integer invalidPageSize = 0; // Invalid page size

        Set<ConstraintViolation<MessageService>> violations = validator.forExecutables().validateParameters(
                messageService,
                messageService.getClass().getMethod("getMessages", Integer.class, Integer.class),
                new Object[]{validPageNumber, invalidPageSize}
        );

        assertFalse(violations.isEmpty());
        ConstraintViolation<MessageService> violation = violations.iterator().next();
        assertEquals("Page size should not be less than 1", violation.getMessage());
    }
}
