  describe('importStreams', () => {
    it('should call apiService.importStreams and handle success', () => {
      const mockStreams = [{ name: 'John', age: '30' }];

      component.importStreams(mockStreams);

      expect(apiServiceMock.importStreams).toHaveBeenCalledWith(mockStreams);
      expect(generalDialogServiceMock.success).toHaveBeenCalledWith(['streams.dialog.body.import']);
    });

    it('should handle error correctly', () => {
      const mockStreams = [{ name: 'John', age: '30' }];
      apiServiceMock.importStreams.mockReturnValueOnce(throwError({ error: { errors: ['Error message'] } }));

      component.importStreams(mockStreams);

      expect(apiServiceMock.importStreams).toHaveBeenCalledWith(mockStreams);
      expect(generalDialogServiceMock.error).toHaveBeenCalledWith(['Error message']);
    });
  });
