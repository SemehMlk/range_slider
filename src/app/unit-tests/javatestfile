import { Injectable } from '@angular/core';

@Injectable({
  providedIn: 'root'
})
export class RoleService {
  private roles: string[] = [];

  constructor() {
    const userInfos = localStorage.getItem('userInfos');
    if (userInfos) {
      try {
        const parsed = JSON.parse(userInfos);
        this.roles = parsed?.roles || [];
      } catch (e) {
        console.error('Erreur lors du parsing des rÃ´les utilisateur', e);
      }
    }
  }

  getUserRoles(): string[] {
    return this.roles;
  }

  hasAnyRole(allowedRoles: string[]): boolean {
    if (!allowedRoles || allowedRoles.length === 0) {
      return true; // Public
    }
    return allowedRoles.some(role => this.roles.includes(role));
  }
}



import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';
import { RoleService } from './role.service';

@Directive({
  selector: '[hasRole]'
})
export class HasRoleDirective {
  private rolesToCheck: string[] = [];

  constructor(
    private templateRef: TemplateRef<any>,
    private viewContainer: ViewContainerRef,
    private roleService: RoleService
  ) {}

  @Input()
  set hasRole(roles: string[]) {
    this.rolesToCheck = roles;
    this.updateView();
  }

  private updateView(): void {
    this.viewContainer.clear();
    if (this.roleService.hasAnyRole(this.rolesToCheck)) {
      this.viewContainer.createEmbeddedView(this.templateRef);
    }
  }
}


