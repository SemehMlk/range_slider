import org.springframework.http.client.JdkClientHttpRequestFactory;
import org.springframework.web.client.RestClient;
import javax.net.ssl.*;
import java.security.KeyManagementException;
import java.security.NoSuchAlgorithmException;
import java.security.cert.X509Certificate;
import java.net.http.HttpClient;
import java.time.Duration;

public class RestClientFactory {

    public static RestClient createInsecureRestClient() {
        try {
            // Désactiver la vérification SSL
            SSLContext sslContext = SSLContext.getInstance("TLS");
            sslContext.init(null, new TrustManager[]{new InsecureTrustManager()}, new java.security.SecureRandom());

            HttpClient insecureHttpClient = HttpClient.newBuilder()
                .sslContext(sslContext)
                .connectTimeout(Duration.ofSeconds(10))  // Timeout optionnel
                .build();

            return RestClient.builder()
                .requestFactory(new JdkClientHttpRequestFactory(insecureHttpClient))
                .build();
        } catch (NoSuchAlgorithmException | KeyManagementException e) {
            throw new RuntimeException("Erreur lors de la création du RestClient sans vérification SSL", e);
        }
    }

    // Classe pour ignorer les certificats SSL
    private static class InsecureTrustManager implements X509TrustManager {
        @Override
        public void checkClientTrusted(X509Certificate[] chain, String authType) {}
        @Override
        public void checkServerTrusted(X509Certificate[] chain, String authType) {}
        @Override
        public X509Certificate[] getAcceptedIssuers() { return new X509Certificate[0]; }
    }
}
