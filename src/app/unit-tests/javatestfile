import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.http.HttpStatus;
import org.springframework.web.client.HttpStatusCodeException;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.server.ResponseStatusException;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import java.io.IOException;

@Service
@RequiredArgsConstructor
@Slf4j
public class MessageClientService {

    private final RestTemplate restTemplate;
    private final ObjectMapper objectMapper;

    @Value("${flx.api.messages-parser.api-url}")
    private String messagesParserApiUrl;

    public ResponseEntity<CanonicalMessage> parseMessage(MessageToParseRequest message) {
        try {
            return restTemplate.postForEntity(messagesParserApiUrl, message, CanonicalMessage.class);
        } catch (HttpStatusCodeException e) {
            throw extractAndThrowProblemDetail(e);
        } catch (Exception e) {
            log.error("Unexpected error while calling the message parser API", e);
            throw new ResponseStatusException(HttpStatus.INTERNAL_SERVER_ERROR, "Failed to process the request", e);
        }
    }

    private ResponseStatusException extractAndThrowProblemDetail(HttpStatusCodeException e) {
        try {
            // Récupérer le CustomProblemDetail depuis la réponse JSON
            CustomProblemDetail problemDetail = objectMapper.readValue(e.getResponseBodyAsString(), CustomProblemDetail.class);
            log.error("Propagating API error: {}", problemDetail);

            return new ResponseStatusException(
                HttpStatus.valueOf(problemDetail.getStatus()), 
                problemDetail.getMessage(), 
                e
            );
        } catch (IOException ex) {
            log.error("Failed to parse error response into CustomProblemDetail", ex);
            return new ResponseStatusException(
                HttpStatus.INTERNAL_SERVER_ERROR, 
                "Unexpected error format from API", 
                ex
            );
        }
    }
}
