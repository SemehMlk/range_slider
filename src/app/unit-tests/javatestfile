import org.junit.jupiter.api.Test;

import java.util.Arrays;
import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;

public class SearchFieldConfigTest {

    @Test
    public void testGetAllConfigs_ShouldReturnAllConfigs() {
        List<SearchConfigDto> configs = SearchFieldConfig.getAllConfigs();

        assertThat(configs).isNotNull();
        assertThat(configs).hasSize(SearchFieldConfig.values().length);
    }

    @Test
    public void testToSearchConfigDto_MessageCreationDate() {
        SearchFieldConfig config = SearchFieldConfig.MESSAGE_CREATION_DATE;

        SearchConfigDto dto = config.toSearchConfigDto();

        assertThat(dto).isNotNull();
        assertThat(dto.getField()).isEqualTo(config.getField());
        assertThat(dto.getFieldType()).isEqualTo(config.getFieldType());
        assertThat(dto.getOperators()).isEqualTo(config.getOperators());
        assertThat(dto.getOptions()).isNull(); // Since MESSAGE_CREATION_DATE has no options
    }

    @Test
    public void testToSearchConfigDto_MessageDirection() {
        SearchFieldConfig config = SearchFieldConfig.MESSAGE_DIRECTION;

        SearchConfigDto dto = config.toSearchConfigDto();

        assertThat(dto).isNotNull();
        assertThat(dto.getField()).isEqualTo(config.getField());
        assertThat(dto.getFieldType()).isEqualTo(config.getFieldType());
        assertThat(dto.getOperators()).isEqualTo(config.getOperators());
        assertThat(dto.getOptions()).isEqualTo(config.getOptions());
    }

    @Test
    public void testToSearchConfigDto_WithOptions() {
        SearchFieldConfig config = SearchFieldConfig.MESSAGE_GLOBAL_STATUS;

        SearchConfigDto dto = config.toSearchConfigDto();

        assertThat(dto).isNotNull();
        assertThat(dto.getField()).isEqualTo(config.getField());
        assertThat(dto.getFieldType()).isEqualTo(config.getFieldType());
        assertThat(dto.getOperators()).isEqualTo(config.getOperators());
        assertThat(dto.getOptions()).isEqualTo(config.getOptions());
    }

    @Test
    public void testConstructorWithoutOptions() {
        FieldEnum field = FieldEnum.CREATION_DATE;
        FieldTypeEnum fieldType = FieldTypeEnum.DATETIME;
        List<ApiConditionOperatorDto> operators = Arrays.asList(ApiConditionOperatorDto.EQUAL, ApiConditionOperatorDto.NOT_EQUAL);

        SearchFieldConfig config = new SearchFieldConfig(field, fieldType, operators);

        assertThat(config.getField()).isEqualTo(field);
        assertThat(config.getFieldType()).isEqualTo(fieldType);
        assertThat(config.getOperators()).isEqualTo(operators);
        assertThat(config.getOptions()).isNull();
    }

    @Test
    public void testConstructorWithOptions() {
        FieldEnum field = FieldEnum.TRANSLATION_STATUS;
        FieldTypeEnum fieldType = FieldTypeEnum.ENUM;
        List<ApiConditionOperatorDto> operators = Arrays.asList(ApiConditionOperatorDto.IN, ApiConditionOperatorDto.NOT_IN);
        List<String> options = Arrays.asList("TRANSLATED", "NOT_TRANSLATED");

        SearchFieldConfig config = new SearchFieldConfig(field, fieldType, operators, options);

        assertThat(config.getField()).isEqualTo(field);
        assertThat(config.getFieldType()).isEqualTo(fieldType);
        assertThat(config.getOperators()).isEqualTo(operators);
        assertThat(config.getOptions()).isEqualTo(options);
    }
}
