@Component
@RequiredArgsConstructor(onConstructor = @__(@Autowired))
public class InternalMigratedAccountDelegateImpl implements InternalMigratedAccountReferentialsApiDelegate {

    @Qualifier("migratedImportService")
    private final ReferentialImportService<MigratedAccountReferential, MigratedAccountReferentialDto> referentialImportService;

    // Autres dépendances...
}

@Component
@RequiredArgsConstructor(onConstructor = @__(@Autowired))
public class NostroAccountDelegateImpl implements NostroAccountReferentialsApiDelegate {

    @Qualifier("nostroImportService")
    private final ReferentialImportService<NostroAccountReferential, NostroAccountReferentialDto> referentialImportService;

    // Autres dépendances...
}

@Mapper(componentModel = "spring")
public interface MigratedAccountReferentialMapper extends AccountReferentialMapper<MigratedAccountReferential, MigratedAccountReferentialDto> {
    // Méthodes spécifiques
}

@Mapper(componentModel = "spring")
public interface NostroAccountReferentialMapper extends AccountReferentialMapper<NostroAccountReferential, NostroAccountReferentialDto> {
    // Méthodes spécifiques
}

@RequiredArgsConstructor
@Slf4j
public class ReferentialImportService<U, V> {

    private final ReferentialService<U> referentialService;
    private final AccountReferentialMapper<U, V> accountReferentialMapper;
    private final ReferentialImportResultMapper<U, V> referentialImportResultMapper;
    private final ReferentialFieldValidator<U> referentialFieldValidator;

    @PostConstruct
    public void logBeans() {
        log.info("ReferentialImportService initialized with:");
        log.info(" - ReferentialService: {}", referentialService.getClass().getName());
        log.info(" - AccountReferentialMapper: {}", accountReferentialMapper.getClass().getName());
        log.info(" - ReferentialImportResultMapper: {}", referentialImportResultMapper.getClass().getName());
        log.info(" - ReferentialFieldValidator: {}", referentialFieldValidator.getClass().getName());
    }
}
