package com.cacib.t2s.kemm.common.repository.jpa.preferences;

import com.cacib.t2s.kemm.domain.enums.KemmUIContext;
import com.cacib.t2s.kemm.domain.jpa.preferences.UserPreference;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;
import java.util.Optional;

import static org.junit.jupiter.api.Assertions.*;

@DataJpaTest
@Transactional
class UserPreferenceRepositoryTest {

    @Autowired
    private UserPreferenceRepository userPreferenceRepository;

    @Test
    void testFindByUtCode() {
        // Arrange: Ajouter des données dans la base de données en mémoire
        UserPreference preference1 = new UserPreference();
        preference1.setUtCode("TEST_CODE_1");
        preference1.setUiContext(KemmUIContext.CONTEXT_1);
        preference1.setConfig("{\"key\":\"value1\"}");
        userPreferenceRepository.save(preference1);

        UserPreference preference2 = new UserPreference();
        preference2.setUtCode("TEST_CODE_1");
        preference2.setUiContext(KemmUIContext.CONTEXT_2);
        preference2.setConfig("{\"key\":\"value2\"}");
        userPreferenceRepository.save(preference2);

        UserPreference preference3 = new UserPreference();
        preference3.setUtCode("TEST_CODE_2");
        preference3.setUiContext(KemmUIContext.CONTEXT_3);
        preference3.setConfig("{\"key\":\"value3\"}");
        userPreferenceRepository.save(preference3);

        // Act: Rechercher par `utCode`
        List<UserPreference> results = userPreferenceRepository.findByUtCode("TEST_CODE_1");

        // Assert: Vérifiez que les résultats correspondent
        assertNotNull(results);
        assertEquals(2, results.size());
        assertTrue(results.stream().allMatch(p -> "TEST_CODE_1".equals(p.getUtCode())));
    }

    @Test
    void testFindByUtCodeAndUiContext() {
        // Arrange: Ajouter des données dans la base de données en mémoire
        UserPreference preference = new UserPreference();
        preference.setUtCode("TEST_CODE_3");
        preference.setUiContext(KemmUIContext.CONTEXT_3);
        preference.setConfig("{\"key\":\"value3\"}");
        userPreferenceRepository.save(preference);

        // Act: Rechercher par `utCode` et `uiContext`
        Optional<UserPreference> result = userPreferenceRepository.findByUtCodeAndUiContext("TEST_CODE_3", KemmUIContext.CONTEXT_3);

        // Assert: Vérifiez que le résultat est correct
        assertTrue(result.isPresent());
        assertEquals("TEST_CODE_3", result.get().getUtCode());
        assertEquals(KemmUIContext.CONTEXT_3, result.get().getUiContext());
        assertEquals("{\"key\":\"value3\"}", result.get().getConfig());
    }
}
