comparator: (filterLocalDateAtMidnight: Date, cellValue: string, filterEndDateAtMidnight: Date) => {
    // Convertir cellValue en objet Date
    const cellDate = new Date(cellValue);

    // Normaliser les dates Ã  minuit, en ignorant les heures et fuseaux horaires
    const filterStartDateAtMidnight = new Date(
        filterLocalDateAtMidnight.getFullYear(),
        filterLocalDateAtMidnight.getMonth(),
        filterLocalDateAtMidnight.getDate()
    );

    const cellDateAtMidnight = new Date(
        cellDate.getFullYear(),
        cellDate.getMonth(),
        cellDate.getDate()
    );

    const filterEndDate = new Date(
        filterEndDateAtMidnight.getFullYear(),
        filterEndDateAtMidnight.getMonth(),
        filterEndDateAtMidnight.getDate()
    );

    console.log('Filter Start Date:', filterStartDateAtMidnight);
    console.log('Filter End Date:', filterEndDate);
    console.log('Cell Date:', cellDateAtMidnight);

    // Comparaison
    if (cellDateAtMidnight < filterStartDateAtMidnight) {
        return -1;  // CellDate is before start date
    } else if (cellDateAtMidnight > filterEndDate) {
        return 1;   // CellDate is after end date
    } else {
        return 0;   // CellDate is within the range, inclusive of start and end dates
    }
}
