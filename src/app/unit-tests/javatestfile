import { Injectable } from '@angular/core';
import { BehaviorSubject, Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class FilterService {
  private filtersMap: Map<string, BehaviorSubject<any>> = new Map();

  constructor() {
    // Initialiser les BehaviorSubjects pour chaque type de message
    this.filtersMap.set('TECHNICAL_MESSAGES', new BehaviorSubject<any>({}));
    this.filtersMap.set('FUNCTIONAL_MESSAGES', new BehaviorSubject<any>({}));
    this.filtersMap.set('OPTIM_MESSAGES', new BehaviorSubject<any>({}));
  }

  setFilters(type: string, filters: any) {
    if (this.filtersMap.has(type)) {
      this.filtersMap.get(type).next(filters);
    }
  }

  getFilters(type: string): Observable<any> {
    if (this.filtersMap.has(type)) {
      return this.filtersMap.get(type).asObservable();
    } else {
      // Retourne un observable vide si le type n'existe pas
      return new BehaviorSubject<any>({}).asObservable();
    }
  }

  clearFilters(type: string) {
    if (this.filtersMap.has(type)) {
      this.filtersMap.get(type).next({});
    }
  }
}
