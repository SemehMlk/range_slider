import { TranslateService } from '@ngx-translate/core';

constructor(private translateService: TranslateService) {}

columnDefsFunction = () => [
  { field: 'id', headerName: this.translateService.instant('TABLE.ID') },
  { field: 'name', headerName: this.translateService.instant('TABLE.NAME') },
  { field: 'email', headerName: this.translateService.instant('TABLE.EMAIL'), hide: true },
  { field: 'phone', headerName: this.translateService.instant('TABLE.PHONE'), hide: true }
];

columnDefs = this.columnDefsFunction(); // Initialisation des colonnes

gridApi;
gridColumnApi;
columnState = null; // Stockage de l'état des colonnes

onGridReady(params) {
  this.gridApi = params.api;
  this.gridColumnApi = params.columnApi;

  // Appliquer l'état sauvegardé si existant
  if (this.columnState) {
    this.gridColumnApi.applyColumnState({
      state: this.columnState,
      applyOrder: true
    });
  }
}

// Sauvegarde l’état des colonnes avant rafraîchissement
saveColumnState() {
  this.columnState = this.gridColumnApi.getColumnState();
}

// Rafraîchir la grille en conservant l’état des colonnes
refreshColumns() {
  this.saveColumnState();  // Sauvegarde l’état des colonnes avant mise à jour
  this.columnDefs = this.columnDefsFunction(); // Recharge les colonnes avec les nouvelles traductions

  setTimeout(() => {
    this.gridColumnApi.applyColumnState({
      state: this.columnState,
      applyOrder: true
    });
  }, 100);
}

// Écouter le changement de langue et mettre à jour les colonnes
ngOnInit() {
  this.translateService.onLangChange.subscribe(() => {
    this.refreshColumns();
  });
}
