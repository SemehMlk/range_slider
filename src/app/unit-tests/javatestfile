    <!-- Ajout de la contrainte d'unicitÃ© -->
    <changeSet id="2-add-unique-constraint-usercode-uicontext" author="yourname">
        <addUniqueConstraint
            columnNames="usercode,uicontext"
            constraintName="uk_usercode_uicontext"
            tableName="user_preferences"/>
    </changeSet>



    @BeanMapping(nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE)
    void updateEntityFromDto(UserPreferenceDTO dto, @MappingTarget UserPreference entity);

@Table(name = "user_preferences", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"usercode", "uicontext"})
})


  public UserPreference saveOrUpdate(UserPreferenceDTO preferenceDTO) {
        try {
            if (preferenceDTO.getId() != null) {
                Optional<UserPreference> existing = repository.findById(preferenceDTO.getId());
                if (existing.isPresent()) {
                    UserPreference entity = existing.get();
                    mapper.updateEntityFromDto(preferenceDTO, entity);
                    return repository.save(entity);
                } else {
                    throw new IllegalArgumentException("No UserPreference found with ID: " + preferenceDTO.getId());
                }
            }
            UserPreference newEntity = mapper.toEntity(preferenceDTO);
            return repository.save(newEntity);
        } catch (DataIntegrityViolationException e) {
            throw new IllegalArgumentException("Duplicate entry for usercode and uicontext: "
                    + preferenceDTO.getUsercode() + ", " + preferenceDTO.getUicontext(), e);
        }
    }
