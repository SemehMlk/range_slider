import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.data.jpa.domain.Specification;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.*;

public class MessageSpecificationBuilderTest {

    @Test
    public void testSpecificationAppliesCorrectCriteria() {
        // Arrange
        OffsetDateTime date = OffsetDateTime.now();
        ApiSearchCriteriaDto criteria = MessageTestUtils.createDateTimeCriteria(ApiSearchableFieldDto.FieldEnum.CREATION_DATE, date);
        
        ApiSearchRequestDto request = new ApiSearchRequestDto();
        request.setLogicOperator(ApiLogicSearchOperatorDto.AND);
        request.setCriteria(List.of(criteria));

        Specification<KemmCanonicalMessage> spec = MessageSpecificationBuilder.buildSpecification(request);
        assertThat(spec).isNotNull();

        // Mock the root, query, and criteria builder
        Root<KemmCanonicalMessage> root = Mockito.mock(Root.class);
        CriteriaQuery<?> query = Mockito.mock(CriteriaQuery.class);
        CriteriaBuilder cb = Mockito.mock(CriteriaBuilder.class);

        // Act - apply the specification
        Predicate predicate = spec.toPredicate(root, query, cb);

        // Assert - verify that the criteria were applied correctly
        verify(cb).equal(root.get("creationDate"), date);
        assertThat(predicate).isNotNull();
    }
}
