@Test
public void testFindAvailableStreams() {
    // Arrange: Insert a stream with deprecated as false (or null)
    KemmMqStream activeStream = KemmMqStream.builder()
            .upStreamQueue("active_queue")
            .downStreamQueue("down_stream_queue")
            .alias("ACTIVE_ALIAS")
            .application("application")
            .direction(KemmStreamDirection.INBOUND)
            .state(KemmStreamState.OK)
            .status(KemmStreamStatus.INACTIVE)
            .type(KemmStreamType.MQ)
            .deprecated(false) // or set this to null to test that case
            .build();
    streamRepository.save(activeStream);

    // Insert a deprecated stream
    KemmMqStream deprecatedStream = KemmMqStream.builder()
            .upStreamQueue("deprecated_queue")
            .downStreamQueue("down_stream_queue")
            .alias("DEPRECATED_ALIAS")
            .application("application")
            .direction(KemmStreamDirection.OUTBOUND)
            .state(KemmStreamState.OK)
            .status(KemmStreamStatus.INACTIVE)
            .type(KemmStreamType.MQ)
            .deprecated(true) // Deprecated set to true
            .build();
    streamRepository.save(deprecatedStream);

    // Act: Find all available streams
    List<KemmStream> availableStreams = streamRepository.findAvailableStreams();

    // Assert: Verify that only non-deprecated streams are returned
    assertNotNull(availableStreams);
    assertEquals(1, availableStreams.size());
    assertEquals("ACTIVE_ALIAS", availableStreams.get(0).getAlias());
}
