import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';

@Component({
  selector: 'flow-actions',
  templateUrl: './flow-actions.component.html'
})
export class FlowActionsComponent implements OnChanges {
  @Input() flowDetails!: {
    state: {
      currentState: string;
      nextPossibleStates: any[]; // on reste proche du backend ici
    };
    scope: {
      scope: string;
      states: any[];
    };
  };

  @Output() actionTriggered = new EventEmitter<any>();

  availableActions: any[] = [];

  ngOnChanges(): void {
    this.loadActions();
  }

  loadActions(): void {
    this.availableActions = this.flowDetails?.state?.nextPossibleStates || [];
  }

  onActionClick(action: any): void {
    this.actionTriggered.emit(action);
  }
}


<div class="flow-actions" *ngIf="availableActions?.length">
  <button
    *ngFor="let action of availableActions"
    (click)="onActionClick(action)">
    {{ action.transitionName }}
  </button>
</div>
