export function AutoUnsubscribe(blackList: string[] = []) {
  return function (constructor: Function) {
    const originalNgOnDestroy = constructor.prototype.ngOnDestroy;

    constructor.prototype.ngOnDestroy = function () {
      for (const prop in this) {
        if (this.hasOwnProperty(prop) && !blackList.includes(prop)) {
          const property = this[prop];
          if (property && typeof property.unsubscribe === 'function') {
            property.unsubscribe();
          }
        }
      }

      // Appeler l'original ngOnDestroy s'il existe
      if (originalNgOnDestroy && typeof originalNgOnDestroy === 'function') {
        originalNgOnDestroy.apply(this, arguments);
      }
    };
  };
}
